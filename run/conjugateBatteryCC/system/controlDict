/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     5.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  | For copyright notice see file Copyright         |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     conjugateLmbFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         3;

deltaT          0.001;

// writeControl    adjustableRunTime;
// writeInterval   0.5;

writeControl timeStep;
writeInterval 5;

purgeWrite      0;

writeFormat     ascii;

writePrecision  8;

writeCompression on;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           0.8;

maxAlphaCo      0.8;

maxDeltaT       0.01;

libs
(
   "libforces.so"
);

functions
(
    friction
    {
        patches (liquidToSteelInterface liquidToLithiumInterface);
        CofR (0 0 0);
        writeControl timeStep;
        writeInterval 1;
        // Field names
        p           pd;
        U           U;
        rho         rhoInf;
        rhoInf      8900;

        type           forces;
        log             true;
    }
    minMaxPd
    {
        type minMaxField;
        functionObjectLibs ("libfieldFunctionObjects.so");
        name pd;
    }
    minMaxU
    {
        type minMaxField;
        functionObjectLibs ("libfieldFunctionObjects.so");
        name U;
    }
    minMaxAlpha1
    {
        type minMaxField;
        functionObjectLibs ("libfieldFunctionObjects.so");
        name alpha1;
    }
    minMaxInducedVoltage
    {
	type minMaxField;
	functionObjectLibs ("libfieldFunctionObjects.so");
	name inducedVoltage;
    }
    minMaxCurrent
    {
	type minMaxField;
	functionObjectLibs ("libfieldFunctionObjects.so");
	name J;
    }
    minMaxInducedCurrent
    {
	type minMaxField;
	functionObjectLibs ("libfieldFunctionObjects.so");
	name j;
    }
    minMaxBodyForce
    {
	type minMaxField;
	functionObjectLibs ("libfieldFunctionObjects.so");
	name bodyForce;
    }
    minMaxMagneticField{
        type minMaxField;
	functionObjectLibs ("libfieldFunctionObjects.so");
	name b;
    }
    minMaxVectorPotential{
        type minMaxField;
	functionObjectLibs ("libfieldFunctionObjects.so");
	name a;
    }
);

// ************************************************************************* //
