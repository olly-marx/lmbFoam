#!/bin/sh
# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application="conjugateLmbFoam"
out=$1
if [ "$out" = "-loud" ]; then
	# fluid
	blockMesh
	setSet -batch setSet-fluid.batch
	setsToZones
	setFields

	#solid
	blockMesh -region solid
	setSet -region solid -batch setSet-solid.batch
	setsToZones -region solid
else
	# fluid
	runApplication -l log.blockMesh-fluid blockMesh
	runApplication -l log.setSet-fluid setSet -batch setSet-fluid.batch
	runApplication -l log.setsToZones-fluid setsToZones
	runApplication setFields

	#solid
	runApplication -l log.blockMesh-solid blockMesh -region solid
	runApplication -l log.setSet-solid setSet -region solid -batch setSet-solid.batch
	runApplication -l log.setsToZones-solid setsToZones -region solid
fi

# Take arguments from the command line to see whether we should
# run or not
# -prepare: prepare case for running but don't run
# -serial: run in serial
# -parallel: run in parallel

arg=$2
if [ "$arg" = "-prepare" ]; then
	tput bel
	exit 0
elif [ "$arg" = "-serial" ]; then
	#runApplication -l log.$application $application
	$application
	tput bel
	exit 0
elif [ "$arg" = "-parallel" ]; then
	decomposePar
	decomposePar -region solid
	mpirun -np 8 $application -parallel | tee log.$application
	tput bel
	reconstructPar
	reconstructPar -region solid
	tput bel
	exit 0
else
	echo "Usage: $0 [-loud / -quiet] [-prepare / -serial / -parallel]"
	echo "       -loud:    run all with verbose output"
	echo "       -quiet:   run all with no output, push to log files"
	echo "       -prepare: prepare case for running but don't run"
	echo "       -serial:  run in serial"
	echo "       -parallel:run in parallel"
	tput bel
	exit 1
fi
