/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     5.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  | For copyright notice see file Copyright         |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
    grad(pd)        interfaceGauss linear;
    snGradCorr(pd)  interfaceGauss linear;
}

divSchemes
{
    div(phi,U)  Gauss linearUpwindV grad(U);
    div(phi,alpha)  Gauss vanLeer01;
    div(phirb,alpha) Gauss vofCompression;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
    div(phi,k) Gauss upwind;
    div(phi,epsilon) Gauss upwind;
    // div scheme for the U cross Bext tem in the voltage equation
    div((U^Bext)) Gauss linear;
}

laplacianSchemes
{
    default         Gauss linear corrected;
    laplacian(rAU,pd) interfaceGauss linear interfaceCorrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
    snGrad(pd)      interfaceCorrected;
}

// ************************************************************************* //
